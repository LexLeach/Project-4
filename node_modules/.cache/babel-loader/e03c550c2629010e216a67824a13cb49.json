{"ast":null,"code":"var _jsxFileName = \"/Users/lexleach/Documents/GA/react-stopwatch/src/App.js\";\nimport React, { Component } from 'react';\nimport Stopwatch from \"./Stopwatch\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getSeconds = () => {\n      return ('0' + this.state.count % 60).slice(-2);\n    };\n\n    this.getMinutes = () => {\n      return Math.floor(this.state.count / 60);\n    };\n\n    this.startCount = () => {\n      this.add = setInterval(() => this.setState({\n        count: this.state.count + 1\n      }), 1000);\n      console.log('starting');\n    };\n\n    this.pauseCount = () => {\n      console.log('paused');\n      clearInterval(this.add);\n    };\n\n    this.resetCount = () => {\n      clearInterval(this.add);\n      let oldState = this.state.count;\n      this.setState({\n        count: 0\n      });\n      console.log('reset');\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Stopwatch, {\n      count: this.state.count,\n      minutes: this.getMinutes(),\n      seconds: this.getSeconds(),\n      start: this.startCount,\n      pause: this.pauseCount,\n      reset: this.resetCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lexleach/Documents/GA/react-stopwatch/src/App.js"],"names":["React","Component","Stopwatch","App","constructor","props","getSeconds","state","count","slice","getMinutes","Math","floor","startCount","add","setInterval","setState","console","log","pauseCount","clearInterval","resetCount","oldState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,UARmB,GAQN,MAAM;AACjB,aAAO,CAAC,MAAM,KAAKC,KAAL,CAAWC,KAAX,GAAmB,EAA1B,EAA8BC,KAA9B,CAAoC,CAAC,CAArC,CAAP;AACD,KAVkB;;AAAA,SAYnBC,UAZmB,GAYN,MAAM;AACjB,aAAOC,IAAI,CAACC,KAAL,CAAW,KAAKL,KAAL,CAAWC,KAAX,GAAmB,EAA9B,CAAP;AACD,KAdkB;;AAAA,SAgBnBK,UAhBmB,GAgBN,MAAM;AACjB,WAAKC,GAAL,GAAWC,WAAW,CAAC,MAAM,KAAKC,QAAL,CAAc;AACzCR,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAkB;AADgB,OAAd,CAAP,EAElB,IAFkB,CAAtB;AAGAS,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KArBkB;;AAAA,SAuBnBC,UAvBmB,GAuBN,MAAM;AACjBF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAE,MAAAA,aAAa,CAAC,KAAKN,GAAN,CAAb;AACD,KA1BkB;;AAAA,SA4BnBO,UA5BmB,GA4BN,MAAM;AACjBD,MAAAA,aAAa,CAAC,KAAKN,GAAN,CAAb;AACA,UAAIQ,QAAQ,GAAG,KAAKf,KAAL,CAAWC,KAA1B;AACA,WAAKQ,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE;AAAT,OAAd;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAjCkB;;AAGjB,SAAKX,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AA6BDe,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,KAA7B;AAAoC,MAAA,OAAO,EAAE,KAAKE,UAAL,EAA7C;AAAgE,MAAA,OAAO,EAAE,KAAKJ,UAAL,EAAzE;AAA4F,MAAA,KAAK,EAAE,KAAKO,UAAxG;AAAoH,MAAA,KAAK,EAAE,KAAKM,UAAhI;AAA4I,MAAA,KAAK,EAAE,KAAKE,UAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAxCyB;;AA2C5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Stopwatch from \"./Stopwatch\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      count: 0\n    }\n  }\n\n  getSeconds = () => {\n    return ('0' + this.state.count % 60).slice(-2)\n  }\n\n  getMinutes = () => {\n    return Math.floor(this.state.count / 60)\n  }\n\n  startCount = () => {\n    this.add = setInterval(() => this.setState({\n      count: this.state.count +1\n    }), 1000);\n    console.log('starting')\n  }\n\n  pauseCount = () => {\n    console.log('paused')\n    clearInterval(this.add)\n  }\n\n  resetCount = () => {\n    clearInterval(this.add)\n    let oldState = this.state.count\n    this.setState({ count: 0 })\n    console.log('reset')\n  }\n\n  render() {\n    return (\n      <Stopwatch count={this.state.count} minutes={this.getMinutes()} seconds={this.getSeconds()} start={this.startCount} pause={this.pauseCount} reset={this.resetCount} />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}